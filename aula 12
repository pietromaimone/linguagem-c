Exercício 1 – Vetor com 10 posições com o número 5

#include <stdio.h>

int main() {
    int vetor[10];

    for (int i = 0; i < 10; i++) {
        vetor[i] = 5;
    }

    printf("Vetor: ");
    for (int i = 0; i < 10; i++) {
        printf("%d ", vetor[i]);
    }

    return 0;
}



 Exercício 2 – Solicite 5 números e exiba os acima da média

#include <stdio.h>

int main() {
    int vetor[5];
    float soma = 0, media;

    for (int i = 0; i < 5; i++) {
        printf("Digite o %dº número: ", i + 1);
        scanf("%d", &vetor[i]);
        soma += vetor[i];
    }

    media = soma / 5;

    printf("Valores acima da média (%.2f):\n", media);
    for (int i = 0; i < 5; i++) {
        if (vetor[i] > media)
            printf("%d ", vetor[i]);
    }

    return 0;
}



Exercício 3 – Vetor de 100 posições com números aleatórios entre 1 e 100, e média

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int vetor[100];
    int soma = 0;

    srand(time(NULL));

    for (int i = 0; i < 100; i++) {
        vetor[i] = rand() % 100 + 1;
        soma += vetor[i];
    }

    printf("Média dos 100 valores: %.2f\n", soma / 100.0);
    return 0;
}



 Exercício 4 – Soma dos números menores que a média dos 10 últimos

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int vetor[100];
    int soma10 = 0;
    float media10;
    int soma_menores = 0;

    srand(time(NULL));

    for (int i = 0; i < 100; i++)
        vetor[i] = rand() % 100 + 1;

    for (int i = 90; i < 100; i++)
        soma10 += vetor[i];

    media10 = soma10 / 10.0;

    for (int i = 0; i < 100; i++) {
        if (vetor[i] < media10)
            soma_menores += vetor[i];
    }

    printf("Média dos 10 últimos valores: %.2f\n", media10);
    printf("Soma dos menores que a média: %d\n", soma_menores);
    return 0;
}




Exercício 5 – Exibe vetor na mesma linha, quebra se múltiplo de 10

// Continuando do exercício 4
    printf("Vetor formatado:\n");
    for (int i = 0; i < 100; i++) {
        printf("%d ", vetor[i]);
        if (vetor[i] % 10 == 0)
            printf("\n");
    }






Exercício 6 – Função que retorna TRUE se vetor está em ordem crescente

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <time.h>

bool vetor_ordenado() {
    int v[5];
    bool crescente = true;

    for (int i = 0; i < 5; i++) {
        v[i] = rand() % 100 + 1;
        printf("%d ", v[i]);
    }
    printf("\n");

    for (int i = 0; i < 4; i++) {
        if (v[i] > v[i + 1]) {
            crescente = false;
            break;
        }
    }

    return crescente;
}

int main() {
    srand(time(NULL));
    int tentativas = 0;
    
    while (!vetor_ordenado()) {
        tentativas++;
    }

    printf("Vetor em ordem crescente após %d tentativas.\n", tentativas + 1);
    return 0;
}





Exercício 7 – Verificar valores iguais em vetor de 10 números aleatórios

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <time.h>

int main() {
    int v[10];
    bool duplicado = false;

    srand(time(NULL));

    for (int i = 0; i < 10; i++) {
        v[i] = rand() % 20 + 1;
        printf("%d ", v[i]);
    }
    printf("\n");

    for (int i = 0; i < 10; i++) {
        for (int j = i + 1; j < 10; j++) {
            if (v[i] == v[j]) {
                duplicado = true;
                printf("Valor duplicado encontrado: %d\n", v[i]);
            }
        }
    }

    if (!duplicado)
        printf("Nenhum valor duplicado encontrado.\n");

    return 0;
}
